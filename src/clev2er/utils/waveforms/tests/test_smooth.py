"""pytest for utils functions
    clev2er.utils.waveforms.smooth
"""

import logging

import numpy as np

from clev2er.utils.waveforms.smooth import smooth_waveform

logger = logging.getLogger(__name__)


def test_smooth_waveform() -> None:
    """test smooth.smooth_waveform

    Test plan:
    Run smooth function on sample waveform that has a correct smoothed version

    Check if results are integers
    Check if result is close to the smoothed version
    """

    logger.info("Testing smooth_waveform function")
    raw_waveform = np.asarray(
        [
            120.0,
            131.0,
            141.0,
            128.0,
            134.0,
            129.0,
            131.0,
            133.0,
            175.0,
            158.0,
            155.0,
            159.0,
            147.0,
            177.0,
            146.0,
            161.0,
            184.0,
            158.0,
            189.0,
            182.0,
            206.0,
            204.0,
            198.0,
            193.0,
            205.0,
            231.0,
            234.0,
            237.0,
            261.0,
            294.0,
            325.0,
            382.0,
            479.0,
            541.0,
            636.0,
            837.0,
            960.0,
            1415.0,
            1642.0,
            2055.0,
            2874.0,
            3612.0,
            5485.0,
            7602.0,
            9182.0,
            13300.0,
            19163.0,
            30176.0,
            46616.0,
            63298.0,
            65535.0,
            55607.0,
            57419.0,
            53240.0,
            43700.0,
            40948.0,
            38563.0,
            35084.0,
            34888.0,
            33269.0,
            29522.0,
            26863.0,
            22782.0,
            23323.0,
            20951.0,
            19576.0,
            21575.0,
            29953.0,
            36249.0,
            33569.0,
            34702.0,
            33688.0,
            26417.0,
            20864.0,
            20572.0,
            20822.0,
            19182.0,
            18783.0,
            19089.0,
            18587.0,
            18351.0,
            16686.0,
            15996.0,
            18247.0,
            18078.0,
            16360.0,
            14279.0,
            12665.0,
            13243.0,
            13399.0,
            12818.0,
            12563.0,
            14166.0,
            13116.0,
            12232.0,
            15477.0,
            17693.0,
            16012.0,
            13480.0,
            11008.0,
            10157.0,
            9967.0,
            8904.0,
            8368.0,
            8736.0,
            10158.0,
            9311.0,
            8082.0,
            8473.0,
            7957.0,
            7804.0,
            9079.0,
            9409.0,
            9295.0,
            8212.0,
            8342.0,
            8822.0,
            7882.0,
            7655.0,
            8432.0,
            8297.0,
            7103.0,
            7741.0,
            9244.0,
            8361.0,
            7258.0,
            6987.0,
            7883.0,
        ]
    )
    true_smoothed_waveform = np.asarray(
        [
            120,
            130,
            133,
            134,
            130,
            131,
            131,
            146,
            155,
            162,
            157,
            153,
            161,
            156,
            161,
            163,
            167,
            177,
            176,
            192,
            197,
            202,
            198,
            198,
            209,
            223,
            234,
            244,
            264,
            293,
            333,
            395,
            467,
            552,
            671,
            811,
            1070,
            1339,
            1704,
            2190,
            2847,
            3990,
            5566,
            7423,
            10028,
            13881,
            20879,
            31985,
            46696,
            58483,
            61480,
            59520,
            55422,
            51453,
            45962,
            41070,
            38198,
            36178,
            34413,
            32559,
            29884,
            26389,
            24322,
            22352,
            21283,
            20700,
            23701,
            29259,
            33257,
            34840,
            33986,
            31602,
            26989,
            22617,
            20752,
            20192,
            19595,
            19018,
            18819,
            18675,
            17874,
            17011,
            16976,
            17440,
            17561,
            16239,
            14434,
            13395,
            13102,
            13153,
            12926,
            13182,
            13281,
            13171,
            13608,
            15134,
            16394,
            15728,
            13500,
            11548,
            10377,
            9676,
            9079,
            8669,
            9087,
            9401,
            9183,
            8622,
            8170,
            8078,
            8280,
            8764,
            9261,
            8972,
            8616,
            8458,
            8348,
            8119,
            7989,
            8128,
            7944,
            7713,
            8029,
            8448,
            8287,
            7535,
            7376,
            7883,
        ]
    )

    tested_smoothed_waveform = smooth_waveform(raw_waveform, moving_average_width=3)

    assert (
        isinstance(tested_smoothed_waveform, np.ndarray)
        and tested_smoothed_waveform.dtype == np.float64
    ), "Smoothing function did not return an array of floats"
    logger.info("Smoothed waveform is correct type")

    assert (
        sum(np.invert(np.isclose(tested_smoothed_waveform, true_smoothed_waveform, atol=1))) <= 1
    ), "Smoothed array does not match correct value"
    logger.info("Smoothed waveform matches the truth value")
