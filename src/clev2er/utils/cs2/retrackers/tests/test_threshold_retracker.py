"""pytest for retracker module
clev2er.utils.retrackers.threshold_retracker.py
"""

import logging

import numpy as np

from clev2er.utils.cs2.retrackers.threshold_retracker import threshold_retracker

logger = logging.getLogger(__name__)


def test_threshold_retracker() -> None:
    """Tests threshold_tracker

    Test plan:
    Get test wave with known thresholds
    Get 30% threshold
    Get 70% threshold
    Check if function returns the expected values
    """

    test_wave = np.array(
        [
            96.66666666666667,
            101.66666666666667,
            102.0,
            111.0,
            110.0,
            121.66666666666667,
            118.0,
            122.66666666666667,
            118.33333333333333,
            129.33333333333334,
            134.0,
            147.0,
            145.66666666666666,
            150.66666666666666,
            150.33333333333334,
            166.0,
            171.66666666666666,
            191.0,
            195.66666666666666,
            221.33333333333334,
            245.0,
            286.6666666666667,
            319.3333333333333,
            366.6666666666667,
            431.3333333333333,
            547.6666666666666,
            677.3333333333334,
            924.3333333333334,
            1241.3333333333333,
            1642.6666666666667,
            2133.6666666666665,
            2834.0,
            3872.0,
            5238.666666666667,
            6820.333333333333,
            9114.333333333334,
            12996.666666666666,
            20119.666666666668,
            31276.333333333332,
            39797.666666666664,
            42686.666666666664,
            41356.333333333336,
            42010.333333333336,
            44928.666666666664,
            46479.333333333336,
            44736.333333333336,
            40567.333333333336,
            38159.666666666664,
            44476.0,
            54729.666666666664,
            56205.0,
            47806.0,
            37085.0,
            33703.333333333336,
            32305.666666666668,
            29985.0,
            26863.0,
            24080.0,
            22166.333333333332,
            20560.0,
            19317.0,
            17671.666666666668,
            15575.666666666666,
            14087.666666666666,
            13760.333333333334,
            14213.0,
            14476.666666666666,
            14258.333333333334,
            14380.0,
            14446.666666666666,
            14251.333333333334,
            14149.0,
            13702.0,
            12755.0,
            11800.0,
            11347.333333333334,
            12151.0,
            12182.0,
            11396.333333333334,
            10536.0,
            10430.666666666666,
            11016.666666666666,
            11775.666666666666,
            12070.333333333334,
            11372.0,
            10356.666666666666,
            10104.666666666666,
            10376.333333333334,
            11129.333333333334,
            10995.0,
            10472.0,
            9589.0,
            8855.0,
            8797.333333333334,
            8758.666666666666,
            9172.0,
            9622.0,
            9284.333333333334,
            8535.666666666666,
            8696.333333333334,
            9066.0,
            9192.666666666666,
            8541.333333333334,
            8480.0,
            8850.666666666666,
            8409.0,
            7591.666666666667,
            6892.0,
            6936.0,
            6820.0,
            6598.0,
            6347.333333333333,
            6451.0,
            6730.666666666667,
            7160.666666666667,
            7024.333333333333,
            6485.333333333333,
            6036.0,
            5732.666666666667,
            5664.333333333333,
            5337.333333333333,
            5418.333333333333,
            5195.0,
            4686.0,
            4197.666666666667,
            3997.6666666666665,
            4264.0,
            4439.666666666667,
        ]
    )

    retrack_30 = threshold_retracker(test_wave, 0.3)
    retrack_70 = threshold_retracker(test_wave, 0.7)

    assert np.isclose(
        retrack_30, 35.95088864085172, atol=0.00001
    ), f"""Retracker failed to return correct value for 30% threshold.
    Expected - 35.95088864085172
    Returned - {retrack_30}"""

    logger.info("Retracking point at 30%% - %f (Expecting 35.950889)", retrack_30)

    assert np.isclose(
        retrack_70, 37.87490289811772, atol=0.00001
    ), f"""Retracker failed to return correct value for 30% threshold.
    Expected - 37.87490289811772
    Returned - {retrack_30}"""

    logger.info("Retracking point at 70%% - %f (Expecting 37.874903)", retrack_70)
